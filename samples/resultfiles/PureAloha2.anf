<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<analysis version="2">
    <inputs>
        <input pattern="/resultfiles/PureAloha2-*.vec"/>
        <input pattern="/resultfiles/PureAloha2-*.sca"/>
    </inputs>
    <charts>
        <chart icon="icons/full/obj/linechart.png" id="14" name="serverChannelState:vector and other variables" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[from omnetpp.scave import results, chart, utils, plot, vectorops as ops
import matplotlib.pyplot as plt
import math
import sys
from matplotlib.ticker import AutoMinorLocator

props = chart.get_properties()
utils.update_matplotlib_rcparams(props)
utils.update_matplotlib_rcparams(utils.parse_matplotlib_rcparams(props["matplotlibrc"] or ""))

# This expression selects the results (you might be able to logically simplify it)

filter_expression = props["filter"]

start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# The data is returned as a Pandas DataFrame
df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)

df = ops.perform_vector_ops(df, props["vector_operations"])

# You can perform any transformations on the data here

print(df)

plt.xlabel('Simulation time (s)')

title_col, legend_cols = utils.extract_label_columns(df)
print(title_col)
print(legend_cols)

plt.gca().xaxis.set_minor_locator(AutoMinorLocator(2))
plt.gca().yaxis.set_minor_locator(AutoMinorLocator(2))

for t in df.itertuples(index=False):
    style = utils.interpolationmode_to_plot_params(props["drawstyle"], t.interpolationmode if "interpolationmode" in df else None, "enum" in df)
    plt.plot(t.vectime, t.vecvalue, label=utils.make_legend_label(legend_cols, t), **style)

title = props['title'] or utils.make_chart_title(df, title_col, legend_cols)
utils.set_plot_title(title)



plt.grid(True, "both")
         
plt.legend()
#plt.grid()

]]></script>
            <dialogPage id="Main" label="Main"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Names {
	chartName,
},
Options {
	Use antialias?,
	Use caching?,
},
Colors {
	backgroundColor
}    
    -->
    
    <!-- Names { -->
    <group text="Names">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- chartName -->
    <label text="Chart name:"/>
    <text x:id="chart_name" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>
    
    <label text="Axes background color:"/>
    <ColorChooser x:id="axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Chart Title:"/>
    <text x:id="title" x:style="BORDER">
        <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
	</text>

    <label text="Filter expression:">
        <layoutData x:class="GridData" horizontalAlignment="BEGINNING" verticalAlignment="BEGINNING"/>
    </label>
    <text x:id="filter" x:style="BORDER|WRAP|MULTI" x:id.isFilter="true">
        <layoutData x:class="GridData" horizontalAlignment="FILL" verticalAlignment="FILL" grabExcessHorizontalSpace="true" grabExcessVerticalSpace="true"/>
    </text>

    <label text="Vector operations:"/>
    <text x:id="vector_operations" x:style="BORDER|MULTI">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>

    <label text="Vector start time (seconds):"/>
    <text x:id="vector_start_time" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>

    <label text="Vector end time (seconds):"/>
    <text x:id="vector_end_time" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>

  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Line Options {
lineWidth%,
lineStyle:solid/dashed/dotted,
drawStyle:dots/points/linear/pins/steps-pre/steps-post,
},
Symbol Options {
    symbolSize%,
    showSymbols?,
}    
    -->
    
    <label text="Line width:"/>
    <spinner x:id="lines.linewidth" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>
    
    <!-- drawStyle:dots/points/linear/pins/steps-pre/steps-post -->
    <label text="Marker:"/>
    <combo x:id="lines.marker" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="."/>
      <add x:p0=","/>
      <add x:p0="o"/>
      <add x:p0="s"/>
      <add x:p0="+"/>
      <add x:p0="x"/>
      <add x:p0="*"/>
      <setText x:p0="None"/>
    </combo>

    <!--  -->

    <!-- symbolSize% -->
    <label text="Marker size:"/>
    <spinner x:id="lines.markersize" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

    
    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="dots"/>
      <add x:p0="points"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
      <setText x:p0="auto"/>
    </combo>


    <!--  -->


    <label x:text="These settings can be overwritten in the Python script for individual lines." x:style="WRAP">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>
    
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="You can customize various Matplotlib properties."/>
    <label text="matplotlibrc file snippet:"/>
    <label text="See https://matplotlib.org/tutorials/introductory/customizing.html#matplotlibrc-sample for example."/>    
    <text x:id="matplotlibrc" x:style="BORDER|MULTI" x:id.isFilter="true"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
  </x:children>
</xswt>]]></dialogPage>
            <property name="filter" value="name =~ serverChannelState:vector"/>
            <property name="vector_start_time" value=""/>
            <property name="vector_operations" value=""/>
            <property name="axes.facecolor" value=""/>
            <property name="drawstyle" value="steps-post"/>
            <property name="lines.marker" value="o"/>
            <property name="vector_end_time" value=""/>
            <property name="lines.linewidth" value="2.8"/>
            <property name="title" value=""/>
            <property name="figure.facecolor" value="#3465A4"/>
            <property name="lines.markersize" value="6"/>
            <property name="matplotlibrc" value=""/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="28" name="Line Chart with Matplotlib" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, plot, vectorops as ops

# get chart properties
props = chart.get_properties()

# collect parameters for query 
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)

# apply vector operations
df = ops.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)
]]></script>
            <dialogPage id="Main" label="Main"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Names { -->
    <group text="Names">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- chartName -->
    <label text="Chart name:"/>
    <text x:id="chart_name" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>
    
    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Chart Title:"/>
    <text x:id="title" x:style="BORDER">
        <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
	</text>

    <label text="Filter expression:">
        <layoutData x:class="GridData" horizontalAlignment="BEGINNING" verticalAlignment="BEGINNING"/>
    </label>
    <text x:id="filter" x:style="BORDER|WRAP|MULTI" x:id.isFilter="true">
        <layoutData x:class="GridData" horizontalAlignment="FILL" verticalAlignment="FILL" grabExcessHorizontalSpace="true" grabExcessVerticalSpace="true"/>
    </text>

    <label text="Vector operations:"/>
    <text x:id="vector_operations" x:style="BORDER|MULTI">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>

    <label text="Vector start time (seconds):"/>
    <text x:id="vector_start_time" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>

    <label text="Vector end time (seconds):"/>
    <text x:id="vector_end_time" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>

  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>
    
    <label text="Line width:"/>
    <spinner x:id="matplotlibrc.lines.linewidth" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>
    
    <label text="Marker:"/>
    <combo x:id="matplotlibrc.lines.marker" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="."/>
      <add x:p0=","/>
      <add x:p0="o"/>
      <add x:p0="s"/>
      <add x:p0="+"/>
      <add x:p0="x"/>
      <add x:p0="*"/>
      <setText x:p0="None"/>
    </combo>

    <!--  -->

    <!-- symbolSize% -->
    <label text="Marker size:"/>
    <spinner x:id="matplotlibrc.lines.markersize" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

    
    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="dots"/>
      <add x:p0="points"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
      <setText x:p0="auto"/>
    </combo>


    <!--  -->


    <label x:text="These settings can be overwritten in the Python script for individual lines." x:style="WRAP">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>
    
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="You can customize various Matplotlib properties."/>
    <label text="matplotlibrc file snippet:"/>
    <label text="See https://matplotlib.org/tutorials/introductory/customizing.html#matplotlibrc-sample for example."/>    
    <text x:id="matplotlibrc" x:style="BORDER|MULTI" x:id.isFilter="true"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
  </x:children>
</xswt>]]></dialogPage>
            <property name="filter" value="name =~ serverChannelState:vector"/>
            <property name="vector_start_time" value=""/>
            <property name="vector_operations" value=""/>
            <property name="drawstyle" value="auto"/>
            <property name="vector_end_time" value=""/>
            <property name="matplotlibrc.lines.linewidth" value="1.5"/>
            <property name="matplotlibrc.figure.facecolor" value="#BABDB6"/>
            <property name="matplotlibrc.axes.facecolor" value="#888A85"/>
            <property name="title" value=""/>
            <property name="matplotlibrc.lines.markersize" value="6"/>
            <property name="matplotlibrc.lines.marker" value="None"/>
            <property name="matplotlibrc" value=""/>
        </chart>
    </charts>
</analysis>
