<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<analysis version="2">
    <inputs>
        <input pattern="/resultfiles/routing/*.vec"/>
        <input pattern="/resultfiles/routing/*.sca"/>
        <input pattern="/resultfiles/aloha/*.vec"/>
        <input pattern="/resultfiles/aloha/*.sca"/>
        <input pattern="/resultfiles/routing2/*.vec"/>
        <input pattern="/resultfiles/routing2/*.sca"/>
    </inputs>
    <charts>
        <chart icon="" id="40" name="scalars simple 1" template="" type="BAR">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_scalars([10, 13, 18, 20], ["a", "b", "c", "d"])

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="Legend.Display" value="false"/>
        </chart>
        <chart icon="" id="41" name="scalars simple 2" template="" type="BAR">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_scalars([10, 13, 18],
                  labels=["a little", "a bit more", "quite a lot"],
                  row_label="amount of milk")

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="Axis.Title.Font" value="Arial-regular-16"/>
            <property name="Label.Font" value="Arial-regular-16"/>
            <property name="Legend.Font" value="Arial-regular-16"/>
        </chart>
        <chart icon="" id="42" name="scalars dataframe 1" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 30],
     [12, 34]],
    columns=["X", "Y"],
    index=["alpha", "beta"])

print(df)

plot.plot_scalars(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="43" name="scalars dataframe 2" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 300, 11, 320],
     [12, 345, 10, 305],
     [11, 325, 12, 348],
     [10, 302, 11, 370]],
    columns=pd.MultiIndex.from_product([["X", "Y"], ["x", "y"]]),
    index=pd.MultiIndex.from_product([["A", "B"], ["a", "b"]])
)

print(df)
plot.plot_scalars(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="44" name="scalars dataframe 3" template="" type="BAR">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot

df = results.get_scalars("name=~rxBytes:sum OR name=~txBytes:sum")
print(df)
plot.plot_scalars(df)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="Axes.Grid" value="None"/>
        </chart>
        <chart icon="" id="45" name="scalars dataframe 4" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import results, chart, plot

df = results.get_scalars("name=~rxBytes:sum OR name=~txBytes:sum", include_itervars=True)
print(df)

df = pd.pivot_table(df, columns="name", index="iaMean", values="value")
print(df)

plot.plot_scalars(df/1000000)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="46" name="vectors simple 1" template="" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_vector("trend", [0, 1, 2, 3], [3,6,7,9])

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="47" name="vectors simple 2" template="" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_vector("trend 1", [0, 1, 2, 3], [3,6,7,9])
plot.plot_vector("trend 2", [0, 1, 2, 3], [4,8,7,5])
plot.plot_vector("trend 3", [0, 1.5, 2.5, 3], [9,7,4,1])

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="48" name="vectors simple 3" template="" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

data = [
	("apples", [2000, 2010, 2020], [300, 367, 341]),
	("oranges", [2002, 2014, 2019], [170, 190, 220]),
    ("pears", [1999, 2003, 2014], [235, 340, 320])
]

plot.plot_vectors(data)

plot.set_properties(chart.get_properties())















]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="X.Axis.Min" value="1990.0"/>
            <property name="X.Axis.Max" value="2030.0"/>
        </chart>
        <chart icon="" id="49" name="vectors dataframe 1" template="" type="LINE">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame({
    "N": [120, 161, 283],
    "A": [300, 320, 345]
})
print(df)
plot.plot_vectors(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="50" name="vectors dataframe 2" template="" type="LINE">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame({
    "M": [120, 161, 283],
    "D": [300, 320, 345],
    "time": [0.1, 0.2, 0.45]
})
print(df)
plot.plot_vectors(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="51" name="vectors dataframe 3" template="" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot

df = results.get_vectors("name =~ hopCount:vector", include_attrs=True)

print(df)

plot.plot_vectors(df)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="52" name="vectors dataframe 4" template="" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot


df = results.get_vectors("name =~ rxBytes:vector OR name =~ txBytes:vector", include_attrs=True)

# df.vecvalue = df.vecvalue.apply(np.cumsum)

print(df)

plot.plot_vectors(df)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="53" name="histograms simple 1" template="" type="HISTOGRAM">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_histogram(label="IQ", binedges=[80, 90, 100, 110, 120, 130], binvalues=[2, 3, 7, 6, 4])

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="54" name="histograms simple 2" template="" type="HISTOGRAM">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot

plot.plot_histogram("A", [80, 90, 105, 118, 130], [2, 3, 7, 4])
plot.plot_histogram("B", [83, 97, 101, 110, 124, 137], [0.6, 0.8, 1.5, 1.1, 0.9])

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="55" name="histograms simple 3" template="" type="HISTOGRAM">
            <script>
                <![CDATA[import numpy as np
from omnetpp.scave import chart, plot

samples = np.random.normal(loc=42, scale=6.28, size=1000000)

values, edges = np.histogram(samples, bins=64)

print(edges)
print(values)

plot.plot_histogram("bell", edges, values)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="56" name="histograms dataframe 1" template="" type="HISTOGRAM">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot

df = results.get_histograms("name =~ collisionLength:histogram")

print(df)

plot.plot_histograms(df)

plot.set_properties(chart.get_properties())]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="57" name="styling 1" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd

from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 30],
     [12, 34]],
    columns=["X", "Y"],
    index=["alpha", "beta"])

print(df)

plot.plot_scalars(df)

plot.set_properties(chart.get_properties())

chart.set_plot_property("Graph.Title", "This is a nice chart!")
chart.set_plot_property("Plot.BackgroundColor", "lightgreen")
chart.set_plot_property("Legend.Font", "Arial-bold-18")




















]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="Graph.Title" value="Even though we have a title set here, this will be overridden by the script"/>
            <property name="Legend.Font" value="Arial-italic-12"/>
        </chart>
        <chart icon="" id="58" name="styling 2" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 30],
     [12, 34]],
    columns=["X", "Y"],
    index=["alpha", "beta"])
print(df)
plot.plot_scalars(df)

plot.set_properties(chart.get_properties())

chart.set_plot_property("Bar.Color/X", "purple")
chart.set_plot_property("Bar.Color/Y", "yellow")]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="59" name="styling 3" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 30],
     [12, 34]],
    columns=["X", "Y"],
    index=["alpha", "beta"])
print(df)
plot.plot_scalars(df)

plot.set_properties(chart.get_properties())

chart.set_properties({
    "Graph.Title": "This is a nice chart!",
    "Plot.BackgroundColor": "lightgreen",

    "Bar.Color/X": "purple",
    "Bar.Color/Y": "yellow"
})]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="60" name="styling 4" template="" type="BAR">
            <script>
                <![CDATA[import pandas as pd
from omnetpp.scave import chart, plot

df = pd.DataFrame(
    [[10, 30],
     [12, 34]],
    columns=["X", "Y"],
    index=["alpha", "beta"])
print(df)
plot.plot_scalars(df)

print("\nThese properties are set in the form:")
print(chart.get_properties())

# print("\nAnd these are all the defaults:")
# print(chart.get_default_plot_properties())

# effective = chart.get_default_properties()
# effective.update(chart.get_properties())

# print("\nSo the effective set of properties (before the script is executed):")

# print(effective)

# print("\n\nBut of course these can be overridden from the script...")

chart.set_plot_property("Plot.BackgroundColor", "blue")

# and you can reset anything to the default (overriding anything set in the dialog, or in the script up to this point)
# chart.set_properties(chart.get_default_properties())





























]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
            <property name="Graph.Title" value="A concise title"/>
            <property name="Axes.Grid" value="All"/>
            <property name="Legend.Font" value="Arial-regular-12"/>
        </chart>
        <chart icon="" id="61" name="importing 1" template="" type="MATPLOTLIB">
            <script>
                <![CDATA[import simplechart]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="62" name="importing 2" template="" type="MATPLOTLIB">
            <script>
                <![CDATA[import matplotlib.pyplot as plt

import charts
charts.chart_function()

plt.grid()]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="63" name="importing 3" template="" type="BAR">
            <script>
                <![CDATA[import charts
charts.chart_function_native()]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="64" name="importing 4" template="" type="MATPLOTLIB">
            <script>
                <![CDATA[from charts import scripts
from omnetpp.scave import chart, plot

scripts[chart.get_name()]()]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="" id="65" name="importing 5" template="" type="BAR">
            <script>
                <![CDATA[from omnetpp.scave import chart, plot
from charts import scripts

scripts[chart.get_name()]()]]>
            </script>
            <dialogPage id="PROPERTIES" label="Properties"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="78" name="Line Chart" template="linechart" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot, vectorops as ops
import math

params = chart.get_properties()

# This expression selects the results (you might be able to logically simplify it)

filter_expression = params["filter"]

start_time = float(params["vector_start_time"] or -math.inf)
end_time = float(params["vector_end_time"] or math.inf)

# The data is returned as a Pandas DataFrame
df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)

df = ops.perform_vector_ops(df, params["vector_operations"])

# You can perform any transformations on the data here

print(df)

# Finally, the results are plotted
plot.plot_vectors(df)

plot.set_properties(chart.get_properties())

plot.set_plot_property("Line.Type", "Linear")
]]>
            </script>
            <dialogPage id="Main" label="Main">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Names {
	chartName,
},
Options {
	Use antialias?,
	Use caching?,
},
Colors {
	backgroundColor
}    
    -->
    
    <!-- Names { -->
    <group text="Names">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- chartName -->
    <label text="Chart name:"/>
    <text x:id="chart_name" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Input" label="Input">
                <![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Filter expression:"/>
    <text x:id="filter" x:style="BORDER|MULTI" x:id.isFilter="true"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    <label text="Vector operations:"/>
    <text x:id="vector_operations" x:style="BORDER|MULTI"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    
    <label text="Vector start time (seconds):"/>
    <text x:id="vector_start_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
    <label text="Vector end time (seconds):"/>
    <text x:id="vector_end_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
  </x:children>
</xswt>]]>
            </dialogPage>
            <dialogPage id="Axes" label="Axes">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Axis Bounds {
	Y axis min,
	Y axis max
},
Axis Options {
	Logarithmic Y axis?
},
Grid {
	Show grid:None/Major/All
}    
    -->
    
    <!-- Axis Bounds { -->
    <group text="Axis bounds">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis min -->
    <label text="X axis min:"/>
    <text x:id="X.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- X axis max -->
    <label text="X axis max:"/>
    <text x:id="X.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis min -->
    <label text="Y axis min:"/>
    <text x:id="Y.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis max -->
    <label text="Y axis max:"/>
    <text x:id="Y.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Options { -->
    <group text="Axis options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Logarithmic Y axis? -->
    <button x:id="Y.Axis.Log" text="Logarithmic y axis" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Show grid:None/Major/All -->
    <label text="Show grid:"/>
    <combo x:id="Axes.Grid" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Legend" label="Legend">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Display Legend?,
Appearance {
	Border?,
	Logend font
},
Positioning {
	Position:inside/above/below/left/right,
	Anchoring:north/northeast/east/southeast/south/southwest/west/northwest
}
    
    -->
    
    <!-- Display Legend? -->
    <button x:id="Legend.Display" text="Display legend" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Appearance { -->
    <group text="Appearance">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Border? -->
    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Positioning { -->
    <group text="Positioning">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Position:inside/above/below/left/right -->
    <label text="Position:"/>
    <combo x:id="Legend.Position" x:style="BORDER|READ_ONLY">
      <add x:p0="inside"/>
      <add x:p0="above"/>
      <add x:p0="below"/>
      <add x:p0="left"/>
      <add x:p0="right"/>
    </combo>

    <!-- Anchoring:north/northeast/east/southeast/south/southwest/west/northwest -->
    <label text="Anchoring:"/>
    <combo x:id="Legend.Anchoring" x:style="BORDER|READ_ONLY">
      <add x:p0="north"/>
      <add x:p0="northeast"/>
      <add x:p0="east"/>
      <add x:p0="southeast"/>
      <add x:p0="south"/>
      <add x:p0="southwest"/>
      <add x:p0="west"/>
      <add x:p0="northwest"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!--  -->

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Titles" label="Titles">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Graph Title {
	Graph title,
	Title font
},
Axis Titles {
	X axis title,
	Y axis title,
	Axis title font,
	Label font,
	Rotate X labels by:0/30/45/60/90,
	wrap labels?
}    
    -->
    
    <!-- Graph Title { -->
    <group text="Graph title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Graph title -->
    <label text="Graph title:"/>
    <text x:id="Graph.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Graph.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Titles { -->
    <group text="Axis titles">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis title -->
    <label text="X axis title:"/>
    <text x:id="X.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis title -->
    <label text="Y axis title:"/>
    <text x:id="Y.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Rotate X labels by:0/30/45/60/90 -->
    <label text="Rotate x labels by:"/>
    <combo x:id="X.Label.RotateBy" x:style="BORDER|READ_ONLY">
      <add x:p0="0"/>
      <add x:p0="30"/>
      <add x:p0="45"/>
      <add x:p0="60"/>
      <add x:p0="90"/>
    </combo>

    <!-- TODO wrap labels for bar charts (as a different form) -->

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <property name="filter" value="*"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="79" name="Line Chart (2)" template="linechart" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot, vectorops as ops
import math

params = chart.get_properties()

# This expression selects the results (you might be able to logically simplify it)

filter_expression = params["filter"]

start_time = float(params["vector_start_time"] or -math.inf)
end_time = float(params["vector_end_time"] or math.inf)

# The data is returned as a Pandas DataFrame
df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)

df = ops.perform_vector_ops(df, params["vector_operations"])

# You can perform any transformations on the data here

print(df)

# Finally, the results are plotted
plot.plot_vectors(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="Main" label="Main">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Names {
	chartName,
},
Options {
	Use antialias?,
	Use caching?,
},
Colors {
	backgroundColor
}    
    -->
    
    <!-- Names { -->
    <group text="Names">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- chartName -->
    <label text="Chart name:"/>
    <text x:id="chart_name" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Input" label="Input">
                <![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Filter expression:"/>
    <text x:id="filter" x:style="BORDER|MULTI" x:id.isFilter="true"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    <label text="Vector operations:"/>
    <text x:id="vector_operations" x:style="BORDER|MULTI"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    
    <label text="Vector start time (seconds):"/>
    <text x:id="vector_start_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
    <label text="Vector end time (seconds):"/>
    <text x:id="vector_end_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
  </x:children>
</xswt>]]>
            </dialogPage>
            <dialogPage id="Lines" label="Lines">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Line Options {
lineWidth%,
lineStyle:solid/dashed/dotted,
drawStyle:dots/points/linear/pins/steps-pre/steps-post,
},
Symbol Options {
    symbolSize%,
    showSymbols?,
}    
    -->
    
    <!-- drawStyle:dots/points/linear/pins/steps-pre/steps-post -->
    <label text="Draw style:"/>
    <combo x:id="Line.Type" x:style="BORDER|READ_ONLY">
      <add x:p0="Linear"/>
      <add x:p0="Pins"/>
      <add x:p0="Dots"/>
      <add x:p0="Points"/>
      <add x:p0="Steps-Post"/>
      <add x:p0="Steps-Pre"/>
      
    </combo>

    <!--  -->


    <!-- symbolSize% -->
    <label text="Symbol size:"/>
    <spinner x:id="Symbols.Size" minimum="0" maximum="100" x:style="BORDER"/>

<!-- TODO
  None("None", ScaveImages.IMG_OBJ16_SYM_NONE),
        Cross("Cross", ScaveImages.IMG_OBJ16_SYM_CROSS),
        Diamond("Diamond", ScaveImages.IMG_OBJ16_SYM_DIAMOND),
        Dot("Dot", ScaveImages.IMG_OBJ16_SYM_DOT),
        Plus("Plus", ScaveImages.IMG_OBJ16_SYM_PLUS),
        Square("Square", ScaveImages.IMG_OBJ16_SYM_SQUARE),
        Triangle("Triangle", ScaveImages.IMG_OBJ16_SYM_TRIANGLE);

    
    <label text="Symbol type:"/>
    <combo x:id="Symbols.Type" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="points"/>
      <add x:p0="linear"/>
      <add x:p0="pins"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-post"/>
    </combo>
-->


    <!--  -->


    <label x:text="These settings can be overwritten in the Python script for individual lines." x:style="WRAP">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>
    
  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Axes" label="Axes">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Axis Bounds {
	Y axis min,
	Y axis max
},
Axis Options {
	Logarithmic Y axis?
},
Grid {
	Show grid:None/Major/All
}    
    -->
    
    <!-- Axis Bounds { -->
    <group text="Axis bounds">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis min -->
    <label text="X axis min:"/>
    <text x:id="X.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- X axis max -->
    <label text="X axis max:"/>
    <text x:id="X.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis min -->
    <label text="Y axis min:"/>
    <text x:id="Y.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis max -->
    <label text="Y axis max:"/>
    <text x:id="Y.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Options { -->
    <group text="Axis options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Logarithmic Y axis? -->
    <button x:id="Y.Axis.Log" text="Logarithmic y axis" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Show grid:None/Major/All -->
    <label text="Show grid:"/>
    <combo x:id="Axes.Grid" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Legend" label="Legend">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Display Legend?,
Appearance {
	Border?,
	Logend font
},
Positioning {
	Position:inside/above/below/left/right,
	Anchoring:north/northeast/east/southeast/south/southwest/west/northwest
}
    
    -->
    
    <!-- Display Legend? -->
    <button x:id="Legend.Display" text="Display legend" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Appearance { -->
    <group text="Appearance">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Border? -->
    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Positioning { -->
    <group text="Positioning">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Position:inside/above/below/left/right -->
    <label text="Position:"/>
    <combo x:id="Legend.Position" x:style="BORDER|READ_ONLY">
      <add x:p0="inside"/>
      <add x:p0="above"/>
      <add x:p0="below"/>
      <add x:p0="left"/>
      <add x:p0="right"/>
    </combo>

    <!-- Anchoring:north/northeast/east/southeast/south/southwest/west/northwest -->
    <label text="Anchoring:"/>
    <combo x:id="Legend.Anchoring" x:style="BORDER|READ_ONLY">
      <add x:p0="north"/>
      <add x:p0="northeast"/>
      <add x:p0="east"/>
      <add x:p0="southeast"/>
      <add x:p0="south"/>
      <add x:p0="southwest"/>
      <add x:p0="west"/>
      <add x:p0="northwest"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!--  -->

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Titles" label="Titles">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Graph Title {
	Graph title,
	Title font
},
Axis Titles {
	X axis title,
	Y axis title,
	Axis title font,
	Label font,
	Rotate X labels by:0/30/45/60/90,
	wrap labels?
}    
    -->
    
    <!-- Graph Title { -->
    <group text="Graph title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Graph title -->
    <label text="Graph title:"/>
    <text x:id="Graph.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Graph.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Titles { -->
    <group text="Axis titles">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis title -->
    <label text="X axis title:"/>
    <text x:id="X.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis title -->
    <label text="Y axis title:"/>
    <text x:id="Y.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Rotate X labels by:0/30/45/60/90 -->
    <label text="Rotate x labels by:"/>
    <combo x:id="X.Label.RotateBy" x:style="BORDER|READ_ONLY">
      <add x:p0="0"/>
      <add x:p0="30"/>
      <add x:p0="45"/>
      <add x:p0="60"/>
      <add x:p0="90"/>
    </combo>

    <!-- TODO wrap labels for bar charts (as a different form) -->

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <property name="filter" value="runattr:experiment =~ PureAlohaExperiment AND runattr:measurement =~ &quot;$numHosts=10, $iaMean=3&quot; AND runattr:replication =~ &quot;#0&quot; AND module =~ &quot;Aloha.host[5]&quot; AND name =~ radioState:vector"/>
            <property name="vector_end_time" value=""/>
            <property name="Y.Axis.Max" value=""/>
            <property name="vector_operations" value=""/>
            <property name="Line.Type" value="Points"/>
            <property name="X.Axis.Max" value=""/>
            <property name="X.Axis.Min" value=""/>
            <property name="X.Label.RotateBy" value=""/>
            <property name="vector_start_time" value=""/>
            <property name="Legend.Anchoring" value=""/>
            <property name="Legend.Position" value=""/>
            <property name="Y.Axis.Min" value=""/>
            <property name="Symbols.Size" value="72"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="80" name="Line Chart (3)" template="linechart" type="LINE">
            <script>
                <![CDATA[from omnetpp.scave import results, chart, plot, vectorops as ops
import math

params = chart.get_properties()

# This expression selects the results (you might be able to logically simplify it)

filter_expression = params["filter"]

start_time = float(params["vector_start_time"] or -math.inf)
end_time = float(params["vector_end_time"] or math.inf)

# The data is returned as a Pandas DataFrame
df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)

df = ops.perform_vector_ops(df, params["vector_operations"])

# You can perform any transformations on the data here

print(df)

# Finally, the results are plotted
plot.plot_vectors(df)

plot.set_properties(chart.get_properties())
]]>
            </script>
            <dialogPage id="Main" label="Main">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Names {
	chartName,
},
Options {
	Use antialias?,
	Use caching?,
},
Colors {
	backgroundColor
}    
    -->
    
    <!-- Names { -->
    <group text="Names">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- chartName -->
    <label text="Chart name:"/>
    <text x:id="chart_name" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!--  -->

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Input" label="Input">
                <![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Filter expression:"/>
    <text x:id="filter" x:style="BORDER|MULTI" x:id.isFilter="true"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    <label text="Vector operations:"/>
    <text x:id="vector_operations" x:style="BORDER|MULTI"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </text>
    
    
    <label text="Vector start time (seconds):"/>
    <text x:id="vector_start_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
    <label text="Vector end time (seconds):"/>
    <text x:id="vector_end_time" x:style="BORDER"> 
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
    </text>
    
  </x:children>
</xswt>]]>
            </dialogPage>
            <dialogPage id="Lines" label="Lines">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Line Options {
lineWidth%,
lineStyle:solid/dashed/dotted,
drawStyle:dots/points/linear/pins/steps-pre/steps-post,
},
Symbol Options {
    symbolSize%,
    showSymbols?,
}    
    -->
    
    <!-- drawStyle:dots/points/linear/pins/steps-pre/steps-post -->
    <label text="Draw style:"/>
    <combo x:id="Line.Type" x:style="BORDER|READ_ONLY">
      <add x:p0="Linear"/>
      <add x:p0="Pins"/>
      <add x:p0="Dots"/>
      <add x:p0="Points"/>
      <add x:p0="Steps-Post"/>
      <add x:p0="Steps-Pre"/>
      
    </combo>

    <!--  -->


    <!-- symbolSize% -->
    <label text="Symbol size:"/>
    <spinner x:id="Symbols.Size" minimum="0" maximum="100" x:style="BORDER"/>

<!-- TODO
  None("None", ScaveImages.IMG_OBJ16_SYM_NONE),
        Cross("Cross", ScaveImages.IMG_OBJ16_SYM_CROSS),
        Diamond("Diamond", ScaveImages.IMG_OBJ16_SYM_DIAMOND),
        Dot("Dot", ScaveImages.IMG_OBJ16_SYM_DOT),
        Plus("Plus", ScaveImages.IMG_OBJ16_SYM_PLUS),
        Square("Square", ScaveImages.IMG_OBJ16_SYM_SQUARE),
        Triangle("Triangle", ScaveImages.IMG_OBJ16_SYM_TRIANGLE);

    
    <label text="Symbol type:"/>
    <combo x:id="Symbols.Type" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="points"/>
      <add x:p0="linear"/>
      <add x:p0="pins"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-post"/>
    </combo>
-->


    <!--  -->


    <label x:text="These settings can be overwritten in the Python script for individual lines." x:style="WRAP">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>
    
  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Axes" label="Axes">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Axis Bounds {
	Y axis min,
	Y axis max
},
Axis Options {
	Logarithmic Y axis?
},
Grid {
	Show grid:None/Major/All
}    
    -->
    
    <!-- Axis Bounds { -->
    <group text="Axis bounds">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis min -->
    <label text="X axis min:"/>
    <text x:id="X.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- X axis max -->
    <label text="X axis max:"/>
    <text x:id="X.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis min -->
    <label text="Y axis min:"/>
    <text x:id="Y.Axis.Min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis max -->
    <label text="Y axis max:"/>
    <text x:id="Y.Axis.Max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Options { -->
    <group text="Axis options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Logarithmic Y axis? -->
    <button x:id="Y.Axis.Log" text="Logarithmic y axis" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Show grid:None/Major/All -->
    <label text="Show grid:"/>
    <combo x:id="Axes.Grid" x:style="BORDER|READ_ONLY">
      <add x:p0="None"/>
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Legend" label="Legend">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Display Legend?,
Appearance {
	Border?,
	Logend font
},
Positioning {
	Position:inside/above/below/left/right,
	Anchoring:north/northeast/east/southeast/south/southwest/west/northwest
}
    
    -->
    
    <!-- Display Legend? -->
    <button x:id="Legend.Display" text="Display legend" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Appearance { -->
    <group text="Appearance">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Border? -->
    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Positioning { -->
    <group text="Positioning">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Position:inside/above/below/left/right -->
    <label text="Position:"/>
    <combo x:id="Legend.Position" x:style="BORDER|READ_ONLY">
      <add x:p0="inside"/>
      <add x:p0="above"/>
      <add x:p0="below"/>
      <add x:p0="left"/>
      <add x:p0="right"/>
    </combo>

    <!-- Anchoring:north/northeast/east/southeast/south/southwest/west/northwest -->
    <label text="Anchoring:"/>
    <combo x:id="Legend.Anchoring" x:style="BORDER|READ_ONLY">
      <add x:p0="north"/>
      <add x:p0="northeast"/>
      <add x:p0="east"/>
      <add x:p0="southeast"/>
      <add x:p0="south"/>
      <add x:p0="southwest"/>
      <add x:p0="west"/>
      <add x:p0="northwest"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!--  -->

  </x:children>
</xswt>
]]>
            </dialogPage>
            <dialogPage id="Titles" label="Titles">
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- page generated from the following spec:
Graph Title {
	Graph title,
	Title font
},
Axis Titles {
	X axis title,
	Y axis title,
	Axis title font,
	Label font,
	Rotate X labels by:0/30/45/60/90,
	wrap labels?
}    
    -->
    
    <!-- Graph Title { -->
    <group text="Graph title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Graph title -->
    <label text="Graph title:"/>
    <text x:id="Graph.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Graph.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Axis Titles { -->
    <group text="Axis titles">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- X axis title -->
    <label text="X axis title:"/>
    <text x:id="X.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Y axis title -->
    <label text="Y axis title:"/>
    <text x:id="Y.Axis.Title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Rotate X labels by:0/30/45/60/90 -->
    <label text="Rotate x labels by:"/>
    <combo x:id="X.Label.RotateBy" x:style="BORDER|READ_ONLY">
      <add x:p0="0"/>
      <add x:p0="30"/>
      <add x:p0="45"/>
      <add x:p0="60"/>
      <add x:p0="90"/>
    </combo>

    <!-- TODO wrap labels for bar charts (as a different form) -->

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]>
            </dialogPage>
            <property name="filter" value="runattr:experiment =~ PureAlohaExperiment AND runattr:measurement =~ &quot;$numHosts=10, $iaMean=9&quot; AND runattr:replication =~ &quot;#0&quot; AND module =~ &quot;Aloha.host[1]&quot; AND name =~ radioState:vector"/>
            <property name="vector_end_time" value=""/>
            <property name="Y.Axis.Max" value=""/>
            <property name="vector_operations" value=""/>
            <property name="Line.Type" value="Steps-Post"/>
            <property name="X.Axis.Max" value=""/>
            <property name="X.Axis.Min" value=""/>
            <property name="X.Label.RotateBy" value=""/>
            <property name="vector_start_time" value=""/>
            <property name="Legend.Anchoring" value=""/>
            <property name="Legend.Position" value=""/>
            <property name="Y.Axis.Min" value=""/>
            <property name="Symbols.Size" value="2"/>
        </chart>
    </charts>
</analysis>
